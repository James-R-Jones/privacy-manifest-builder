{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["ANSWER","initialState","ready","answers","questionnaire","item","reduce","prev","e","linkId","reducer","state","action","type","value","Object","values","every","i","getOptions","answerValueSet","contained","find","id","compose","include","concept","OptionsList","answerOptions","currentAnswer","dispatcher","map","className","name","code","checked","onChange","htmlFor","display","URLInput","placeholder","pattern","size","required","target","QuestionItem","App","useReducer","dispatch","href","src","logo","alt","style","height","verticalAlign","marginRight","text","encodeURIComponent","JSON","stringify","download","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.566a568f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.afa3dc39.svg\";","import logo from './logo.svg';\nimport questionnaire from \"./questionnaire.json\";\nimport { useReducer } from 'react'\n\nconst ANSWER = 'ANSWER'\n\nconst initialState = {\n  ready: false,\n  answers: questionnaire.item.reduce((prev, e) => {\n    prev[e.linkId] = null;\n    return prev\n  }, {})\n}\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case ANSWER:\n      const answers = {\n          ...state.answers,\n          [action.linkId]: action.value\n      }\n      return {\n        ...state,\n        answers,\n        ready: Object.values(answers).every(i => !!i)\n      }\n    default:\n        return state\n  }\n}\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"/\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" style={{\n              height: \"1.4em\",\n              verticalAlign: \"top\",\n              marginRight: \"1ex\"\n            }} /> Privacy Manifest Builder\n          </a>\n        </div>\n      </nav>\n      <main className=\"container\">\n        <br/>\n        <br/>\n        <div className=\"row\">\n        { questionnaire.item.map((item) => (\n          <div key={item.linkId} className=\"col-lg-6\">\n            <div className=\"card\">\n              <div className=\"card-header\"><b>{ item.text }</b></div>\n              <div className=\"card-body\">\n                <QuestionItem\n                  linkId={item.linkId}\n                  type={item.type}\n                  answerOptions={getOptions(item.answerValueSet)}\n                  currentAnswer={state.answers[item.linkId]}\n                  dispatcher={(linkId, value) => void dispatch({ type: ANSWER, linkId, value})}\n                  />\n              </div>\n            </div>\n            <br/>\n        </div>\n        ))}\n        </div>\n        <hr/>\n        <div className=\"text-center\">\n          <a className={`btn btn-primary btn-lg ${!state.ready ? 'disabled' : ''}`} href={\"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(state.answers, null, 2))} download=\"PrivacyManifest.json\">Generate Privacy Manifest</a>\n        </div>\n        <br/>\n        <br/>\n        <br/>\n      </main>\n      <nav className=\"navbar fixed-bottom navbar-light bg-light\">\n        <div className=\"container\">\n          <div className=\"text-muted\">\n            Read more about the SMART Privacy Manifest <a href=\"/\" target=\"_blank\" rel=\"noreferrer\">here</a>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nfunction getOptions(answerValueSet) {\n  if(answerValueSet) {\n    return questionnaire.contained.find(e => `#${e.id}` === answerValueSet).compose.include[0].concept\n  }\n  return null\n}\n\nfunction OptionsList({ linkId, answerOptions, currentAnswer, dispatcher }) {\n  return answerOptions.map(concept => (\n    <div key={`${linkId}_${concept.code}`} className=\"form-check\">\n    <input className=\"form-check-input\"\n      type=\"radio\" name={linkId}\n      id={`${linkId}_${concept.code}`}\n      value={concept.code}\n      checked={currentAnswer === concept.code}\n      onChange={() => dispatcher(concept.code)}\n      />\n    <label className=\"form-check-label\" htmlFor={`${linkId}_${concept.code}`}>\n      {concept.display}\n    </label>\n  </div>\n  ))\n}\n\n// TODO: Input validation\nfunction URLInput({ linkId, currentAnswer, dispatcher}) {\n  return <input className=\"form-control\" type=\"url\" name={linkId} id={linkId} placeholder=\"https://example.com\"\n              pattern=\"https?://.*\" size=\"30\"\n              required value={currentAnswer || ''} onChange={e => dispatcher(e.target.value)}/>\n}\n\nfunction QuestionItem({ type, linkId, answerOptions, currentAnswer, dispatcher}) {\n  switch(type) {\n    case 'choice':\n      return  <OptionsList\n                answerOptions={answerOptions}\n                linkId={linkId}\n                currentAnswer={currentAnswer}\n                dispatcher={(value) => void dispatcher(linkId, value)}\n              />\n    case 'url':\n      return <URLInput\n                linkId={linkId}\n                currentAnswer={currentAnswer}\n                dispatcher={(value) => void dispatcher(linkId, value)}\n              />\n    default:\n      return <div className=\"error\">Error: Unsupported Question Type</div>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}